getwd()
}
}
ensure <- function(x){
x <- as.character(x)
if(!require(package=x, character.only=TRUE)){
install.packages(pkgs=x, repos="http://cran.r-project.org")
require(x, character.only=TRUE)
}
}
getReadyForTwitter <- function(){
ensure("bitops")
ensure("RCurl")
ensure("RJSONIO")
ensure("twitteR")
}
getReadyForTwitter()
install.packages(c("bitops", "RCurl", "RJSONIO", "twitteR", "rjson"))
getReadyForTwitter()
install.packages(c("gplots", "stringr", "KernSmooth", "Grid2Polygons", "tm"))
install.packages("wordcloud")
install.packages(c("xlsx", "XLConnect", "gdata"))
install.packages("stringr")
install.packages("gplots")
install.packages("KernSmooth")
install.packages("gridBase")
install.packages("gridExtra")
install.packages("gridGraphviz")
install.packages("RGraphics")
install.packages("gridSVG")
install.packages("Grid2Polygons")
install.packages("rgeos")
install.packages("rgeos")
install.packages("Grid2Polygons")
install.packages("tm")
install.packages("xlsx")
install.packages("xlsxjars")
install.packages("rJava")
install.packages("codetools")
install.packages("rJava")
install.packages("xlsxjars")
install.packages("codetools")
install.packages("xlsxjars")
update.packages(checkBuilt = TRUE, ask = FALSE)
install.packages("xlsxjars")
install.packages("xls")
install.packages("xlsx")
install.packages("XLConnect")
install.packages("RMySQL")
install.packages("PBSmapping")
install.packages("maptools")
getReadyForTwitter <- function(){
ensure("bitops")
ensure("RCurl")
ensure("RJSONIO")
ensure("twitteR")
}
getReadyForTwitter()
tweetCollection <- searchTwitter("#SenaSaySorry", n=50)
registerWithTwitter <- function(){
#API key JaApoxZQLK7lFR5MJbhP9qUXc
#API secret M1lrcjtIuPuIt5fi4Da2Pchps8zWuB8z5YY41esCsyt9ocOQDi
#Access token 46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj
#Access token secret JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9
consumer_key <- "46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj"
consumer_secret <- "JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9"
oauth <- getTwitterOAuth(consumer_key, consumer_secret)
registerTwitterOAuth(oauth)
}
registerWithTwitter()
registerWithTwitter <- function(){
#API key JaApoxZQLK7lFR5MJbhP9qUXc
#API secret M1lrcjtIuPuIt5fi4Da2Pchps8zWuB8z5YY41esCsyt9ocOQDi
#Access token 46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj
#Access token secret JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9
consumer_key <- "46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj"
consumer_secret <- "JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9"
#oauth <- getTwitterOAuth(consumer_key, consumer_secret)
#registerTwitterOAuth(oauth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "12345pqrst6789ABCD"
consumerSecret <- "abcd1234EFGH5678ijkl0987MNOP6543qrst21"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
}
registerWithTwitter()
registerWithTwitter <- function(){
#API key JaApoxZQLK7lFR5MJbhP9qUXc
#API secret M1lrcjtIuPuIt5fi4Da2Pchps8zWuB8z5YY41esCsyt9ocOQDi
#Access token 46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj
#Access token secret JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9
consumer_key <- "46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj"
consumer_secret <- "JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9"
#oauth <- getTwitterOAuth(consumer_key, consumer_secret)
#registerTwitterOAuth(oauth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "12345pqrst6789ABCD"
consumerSecret <- "abcd1234EFGH5678ijkl0987MNOP6543qrst21"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
}
registerWithTwitter()
registerWithTwitter <- function(){
#API key JaApoxZQLK7lFR5MJbhP9qUXc
#API secret M1lrcjtIuPuIt5fi4Da2Pchps8zWuB8z5YY41esCsyt9ocOQDi
#Access token 46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj
#Access token secret JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9
consumer_key <- "46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj"
consumer_secret <- "JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9"
#oauth <- getTwitterOAuth(consumer_key, consumer_secret)
#registerTwitterOAuth(oauth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "12345pqrst6789ABCD"
consumerSecret <- "abcd1234EFGH5678ijkl0987MNOP6543qrst21"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
#registerTwitterOAuth(twitCred)
}
registerWithTwitter()
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumer_key <- "46661962-5jsy7Go2hRGeV8yveEfg88CiGMZhA63Yu5tTCVRUj"
consumer_secret <- "JVlT9srBkJ7SJawYm0KNf2dIRPrksUZlnL8uMgkCepFE9"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
consumer_key <- "JaApoxZQLK7lFR5MJbhP9qUXc"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
consumer_secret <- "M1lrcjtIuPuIt5fi4Da2Pchps8zWuB8z5YY41esCsyt9ocOQDi"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
3828654
twitCred$handshake()
39521653952165
getTwitterOAuth(consumer_key, consumer_secret)
5518899
getTwitterOAuth(consumer_key, consumer_secret)
getTwitterOAuth(consumer_key, consumer_secret)
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
tweetCollection <- searchTwitter("#SenaSaySorry", n=50)
class(tweetCollection)
str(tweetCollection)
summary(tweetCollection)
head(tweetCollection, 1)
str(head(tweetCollection, 1))
tweetCollection <- searchTwitter("#SenaSaySorry", n=500)
length(tweetCollection)
tweetFrame <- do.call("rbind", lapply(tweetCollection, as.data.frame))
str(tweetFrame)
summary(tweetFrame)
names(tweetFrame)
dim(tweetFrame)
tweetDF <- function(searchTerm, n=numTweets){
tweetCollection <- searchTwitter(searchTerm, n)
return(do.call("rbind", lapply(tweetCollection, as.data.frame)))
}
srkTweets <- tweetDF("#iamsrk", n=300)
# tweetDF() - For a given search term, collect n twitter search results and
# convert them to a data frame
tweetDF <- function(searchTerm, n=numTweets){
tweetCollection <- searchTwitter(searchTerm, n, retryOnRateLimit=100)
return(do.call("rbind", lapply(tweetCollection, as.data.frame)))
}
srkTweets <- tweetDF("#iamsrk", n=300)
# tweetDF() - For a given search term, collect n twitter search results and
# convert them to a data frame
tweetDF <- function(searchTerm, n=numTweets){
tweetCollection <- searchTwitter(searchTerm, n, retryOnRateLimit=300)
return(do.call("rbind", lapply(tweetCollection, as.data.frame)))
}
srkTweets <- tweetDF("#iamsrk", n=300)
# tweetDF() - For a given search term, collect n twitter search results and
# convert them to a data frame
tweetDF <- function(searchTerm, n=numTweets){
#tweetCollection <- searchTwitter(searchTerm, n, retryOnRateLimit=300)
tweetCollection <- searchTwitter(searchTerm, n)
return(do.call("rbind", lapply(tweetCollection, as.data.frame)))
}
srkTweets <- tweetDF("#iamsrk", n=300)
# tweetDF() - For a given search term, collect n twitter search results and
# convert them to a data frame
tweetDF <- function(searchTerm, n=numTweets){
#tweetCollection <- searchTwitter(searchTerm, n)
tweetCollection <- searchTwitter(searchTerm, n, retryOnRateLimit=300)
return(do.call("rbind", lapply(tweetCollection, as.data.frame)))
}
srkTweets <- tweetDF("#iamsrk", n=300)
names(tweetFrame)
attach(tweetFrame)
head(created, 4)
hist(created)
hist(created, breaks=10, freq=TRUE)
hist(created, breaks=20, freq=TRUE)
srkTweets <- tweetDF("#iamsrk", n=300)
save.image("~/Course-Work/data-analysis/twitter/twitter.RData")
savehistory("~/Course-Work/data-analysis/twitter/twitter.Rhistory")
summary(tweetFrame)
head(created, 4)
attach(tweetFrame)
head(created, 4)
hist(created, breaks=10, freq=TRUE)
par(mfrow=c(2,2), mar=c(3,3,3,1))
hist(created, breaks=10, freq=TRUE)
hist(created, breaks=20, freq=TRUE)
par(mfrow=c(2,2), mar=c(4,4,3,1))
hist(created, breaks=10, freq=TRUE)
hist(created, breaks=20, freq=TRUE)
hist(created, breaks=30, freq=TRUE)
hist(created, breaks=40, freq=TRUE)
class(created)
as.integer(created)
order(as.integer(created))
tweetFrame[order(as.integer(created)), ]
sortedTweetFrame <- tweetFrame[order(as.integer(created)), ]
detach(tweetFrame)
attach(sortedTweetFrame)
detach(sortedTweetFrame)
tweetFrameSorted <- tweetFrame[order(as.integer(created)), ]
attach(tweetFrame)
tweetFrameSorted <- tweetFrame[order(as.integer(created)), ]
detach(tweetFrame)
attach(tweetFrameSorted)
diff(created)
created
diff(created)
par(mfrow=c(1,1))
hist(as.integer(diff(created)))
class(diff(created))
srkTweets <- tweetDF("#iamsrk", n=300)
ensure("bitops")
ensure("RCurl")
ensure("RJSONIO")
ensure("twitteR")
# tweetDF() - For a given search term, collect n twitter search results and
# convert them to a data frame
tweetDF <- function(searchTerm, n=numTweets){
#tweetCollection <- searchTwitter(searchTerm, n)
tweetCollection <- searchTwitter(searchTerm, n, retryOnRateLimit=300)
return(do.call("rbind", lapply(tweetCollection, as.data.frame)))
}
srkTweets <- tweetDF("#iamsrk", n=300)
consumer_key <- "JaApoxZQLK7lFR5MJbhP9qUXc"
consumer_secret <- "M1lrcjtIuPuIt5fi4Da2Pchps8zWuB8z5YY41esCsyt9ocOQDi"
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
twitCred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
srkTweets <- tweetDF("#iamsrk", n=300)
salmanTweets <- tweetDF("#BeingSalmanKhan", n=300)
mean(as.integer(diff(created)))
diff(created)
created
str(tweetFrame)
dim(tweetFrame)
head(created, 4)
attach(tweetFrame)
tweetFrameSorted <- tweetFrame[order(as.integer(created)), ]
tweetFrame <- do.call("rbind", lapply(tweetCollection, as.data.frame))
str(tweetFrame)
summary(tweetFrame)
dim(tweetFrame)
attach(tweetFrame)
head(created, 4)
par(mfrow=c(2,2), mar=c(4,4,3,1))
hist(created, breaks=10, freq=TRUE)
hist(created, breaks=20, freq=TRUE)
hist(created, breaks=30, freq=TRUE)
hist(created, breaks=40, freq=TRUE)
class(created)
as.integer(created)
order(as.integer(created))
tweetFrameSorted <- tweetFrame[order(as.integer(created)), ]
detach(tweetFrame)
attach(tweetFrameSorted)
created
diff(created)
par(mfrow=c(1,1))
class(diff(created))
hist(as.integer(diff(created)))
mean(as.integer(diff(created)))
library("modeest")
mode(as.integer(diff(created)))
mfv(as.integer(diff(created)))
median(as.integer(diff(created)))
sum((as.integer(diff(created))) < 60)
sum((as.integer(diff(created))) < 30)
sum((as.integer(diff(created))) < 10)
save.image("~/Course-Work/data-analysis/twitter/twitter.RData")
savehistory("~/Course-Work/data-analysis/twitter/twitter.Rhistory")
